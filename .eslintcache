[{"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\index.js":"1","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\reportWebVitals.js":"2","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\App.js":"3","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\ApolloProvider.js":"4","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Pages\\Home.js":"5","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Pages\\Login.js":"6","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Pages\\Register.js":"7","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\Bar.js":"8","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\postCard.js":"9","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\hooks.js":"10","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\context\\auth.js":"11","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\AuthRoute.js":"12","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\postForm.js":"13","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\graphql.js":"14","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\LikeButton.js":"15","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\PostView.js":"16","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\DeleteButton.js":"17","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\CommentForm.js":"18","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\kikiPropup.js":"19"},{"size":363,"mtime":1607747882043,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":899,"mtime":1608015012443,"results":"23","hashOfConfig":"21"},{"size":773,"mtime":1608024469695,"results":"24","hashOfConfig":"21"},{"size":1267,"mtime":1608184243419,"results":"25","hashOfConfig":"21"},{"size":2311,"mtime":1607901859234,"results":"26","hashOfConfig":"21"},{"size":3394,"mtime":1607900472443,"results":"27","hashOfConfig":"21"},{"size":1753,"mtime":1607920227361,"results":"28","hashOfConfig":"21"},{"size":1767,"mtime":1608183079276,"results":"29","hashOfConfig":"21"},{"size":416,"mtime":1607896929067,"results":"30","hashOfConfig":"21"},{"size":1469,"mtime":1607904251442,"results":"31","hashOfConfig":"21"},{"size":434,"mtime":1607904824477,"results":"32","hashOfConfig":"21"},{"size":2131,"mtime":1608184344661,"results":"33","hashOfConfig":"21"},{"size":295,"mtime":1607911014313,"results":"34","hashOfConfig":"21"},{"size":1562,"mtime":1608183085233,"results":"35","hashOfConfig":"21"},{"size":3739,"mtime":1608185348274,"results":"36","hashOfConfig":"21"},{"size":1626,"mtime":1608182949432,"results":"37","hashOfConfig":"21"},{"size":1747,"mtime":1608115293702,"results":"38","hashOfConfig":"21"},{"size":228,"mtime":1608182918706,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"mxk78y",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\index.js",[],["82","83"],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\reportWebVitals.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\App.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\ApolloProvider.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Pages\\Home.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Pages\\Login.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Pages\\Register.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\Bar.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\postCard.js",["84"],"import React, { useContext } from \"react\";\r\nimport { Button, Card, Image, Icon, Label,  } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport KikiPropup from \"../util/kikiPropup\"\r\n\r\nfunction PostCard({\r\n  post: { likeCount, commentCount, username, createdAt, body, id, likes },\r\n}) {\r\n  const commentOnPost = () => {\r\n    console.log(\"comment\");\r\n  };\r\n  const context = useContext(AuthContext);\r\n\r\n  return (\r\n    <Card fluid color=\"pink\">\r\n      <Card.Content>\r\n        <Image\r\n          floated=\"right\"\r\n          size=\"mini\"\r\n          src=\"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\"\r\n        />\r\n        <Card.Header>{username}</Card.Header>\r\n        <Card.Meta>{moment(createdAt).fromNow(true)}</Card.Meta>\r\n        <Card.Description as={Link} to={`/posts/${id}`}>\r\n          {body}\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <LikeButton post={{ id, likes, likeCount }} user={context.user} />\r\n        <KikiPropup\r\n      \r\n          content=\"comment on post\"\r\n        >\r\n           <Button labelPosition=\"right\" as={Link} to={`/posts/${id}`}>\r\n              <Button basic color=\"green\">\r\n                <Icon name=\"comment\" />\r\n              </Button>\r\n              <Label as=\"a\" basic color=\"green\" pointing=\"left\">\r\n                {commentCount}\r\n              </Label>\r\n            </Button>\r\n        </KikiPropup>\r\n\r\n        {context.user && context.user.username === username && (\r\n          <DeleteButton id={id} />\r\n        )}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\hooks.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\context\\auth.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\AuthRoute.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\postForm.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\graphql.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\LikeButton.js",[],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\PostView.js",["85"],"D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\DeleteButton.js",["86"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, Confirm } from \"semantic-ui-react\";\r\nimport KikiPropup from \"../util/kikiPropup\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_POSTS_QUERY } from \"../util/graphql\";\r\nfunction DeleteButton({ id, callBack, postId, commentId }) {\r\n  const [openModal, setModal] = useState(false);\r\n  const theFetchChoice = commentId ? DELETE_COMMENT : DELETE_POST;\r\n  const values = commentId ? { postId, commentId } : { postId: id };\r\n  console.log(theFetchChoice);\r\n  const [DeletePost] = useMutation(theFetchChoice, {\r\n    variables: values,\r\n    refetchQueries: [{ query: FETCH_POSTS_QUERY }],\r\n    update(proxy) {\r\n      setModal(false);\r\n      if (callBack) callBack();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <KikiPropup content={commentId ? \"Delete a comment\" : \"Delete a post\"}>\r\n      <Button\r\n        labelPosition=\"right\"\r\n        floated=\"right\"\r\n        onClick={() => setModal(true)}\r\n      >\r\n        <Button basic color=\"red\">\r\n          <Icon name=\"trash alternate outline\" />\r\n        </Button>{\" \"}\r\n        <Confirm\r\n          open={openModal}\r\n          onCancel={() => setModal(false)}\r\n          onConfirm={DeletePost}\r\n        />\r\n      </Button>\r\n    </KikiPropup>\r\n  );\r\n}\r\n\r\nconst DELETE_POST = gql`\r\n  mutation deletePost($postId: ID!) {\r\n    deletePost(postId: $postId)\r\n  }\r\n`;\r\n\r\nconst DELETE_COMMENT = gql`\r\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\r\n    deleteComment(postId: $postId, commentId: $commentId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DeleteButton;\r\n","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\Component\\CommentForm.js",["87"],"import React from \"react\"\r\nimport {useForm } from \"../util/hooks\"\r\nimport gql from 'graphql-tag'\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {FETCH_POSTS_QUERY} from \"../util/graphql\"\r\n\r\nfunction CommentForm({postId}){\r\n    const {handleChange , submit , values } =useForm(submitTheComment,{\r\n        body:''\r\n    });\r\n\r\n    const [submitComment,{ error }] = useMutation(POST_COMMENT,{\r\n        variables:{\r\n            postId,\r\n            body:values.body\r\n        },\r\n       \r\n    })\r\n    function submitTheComment(){\r\n        submitComment()\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submit}>\r\n            \r\n            <Form.Field>\r\n            <Form.Input\r\n            placeholder='mozart is great..'\r\n            name='body'\r\n            onChange={handleChange}\r\n            value={values.body}\r\n            error={error?true:false}         \r\n            />\r\n            </Form.Field>\r\n           \r\n            <Form.Button type='submit' color='pink' floated=\"right\">Post</Form.Button>\r\n            {\r\n                error &&(\r\n                    <div className='ui negative message'>\r\n                        <ul>\r\n                            <li>{error.graphQLErrors[0].message}</li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </Form>\r\n    );\r\n\r\n\r\n}\r\nconst POST_COMMENT = gql`\r\nmutation addComment($postId:ID!,$body:String!){\r\n    addComment(postId:$postId , body:$body){\r\n        id body username createdAt likeCount commentCount\r\n        likes{\r\n            id username createdAt\r\n        }\r\n        comments{\r\n            body username createdAt id\r\n        }\r\n    }\r\n\r\n}\r\n`;\r\n\r\nexport default CommentForm","D:\\JavaSC\\React\\GraphQL\\merngServer\\kiki\\src\\util\\kikiPropup.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":13,"column":9,"nodeType":"94","messageId":"95","endLine":13,"endColumn":22},{"ruleId":"92","severity":1,"message":"96","line":15,"column":20,"nodeType":"94","messageId":"95","endLine":15,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"98","line":6,"column":9,"nodeType":"94","messageId":"95","endLine":6,"endColumn":26},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'commentOnPost' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'FETCH_POSTS_QUERY' is defined but never used.","no-global-assign","no-unsafe-negation"]